@model QaisYousuf.ViewModels.CodePageViewModel
@{
    Layout = null;
}

<div class="card card-cascade narrower mb-1 z-depth-0" style="margin-top: 28px">

    <!--Card image-->
    <div class="view view-cascade pt-0">
        <div class=" card-header light-blue lighten-1 white-text text-uppercase font-weight-bold text-center py-3">
            Insert new record
        </div>

    </div>
    <!--/.Card image-->
    <!--Card content-->
    <div class="card-body card-body-cascade d-flex justify-content-center mt-n2">
        @using (Html.BeginForm("Create", "CodePage", FormMethod.Post, new { onsubmit = "return SubmitFormCreate(this)" }))
        {
            @Html.HiddenFor(model => model.Id)
            <div class="form-group">
                @Html.LabelFor(model => model.Title, new { @class = "control-label" })
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Slug, new { @class = "control-label" })
                @Html.EditorFor(model => model.Slug, new { htmlAttributes = new { @class = "form-control" } })

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MetaKeywords, new { @class = "control-label" })
                @Html.EditorFor(model => model.MetaKeywords, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MetaKeywords, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.MetaDescription, new { @class = "control-label" })
                @Html.EditorFor(model => model.MetaDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MetaDescription, "", new { @class = "text-danger" })
            </div>

            <div class="form-group  ">
                <div class="checkbox">
                    <label>@Html.CheckBoxFor(model => model.IsVisibleToSearchEngine, new { style = "opacity: 1" })&nbsp;  &nbsp; @Html.DisplayNameFor(model => model.IsVisibleToSearchEngine)</label>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BannerId, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.DropDownListFor(m => m.BannerId, new SelectList(ViewBag.Banner, "Id", "MainTitle"), "-----Select the banner------", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.BannerId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ProgrammingId, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.DropDownListFor(m => m.ProgrammingId, new SelectList(ViewBag.ProgrammingTools, "Id", "MainTitle"), "-----Select Programming Tools------", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ProgrammingId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.UI_UX_Id, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.DropDownListFor(m => m.UI_UX_Id, new SelectList(ViewBag.UIUXTools, "Id", "MainTitle"), "-----Select UI UX Tools------", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.UI_UX_Id, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DesignCodeId, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.DropDownListFor(m => m.DesignCodeId, new SelectList(ViewBag.DesignCode, "Id", "Title"), "-----Select Design Code ------", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DesignCodeId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.SubscriptionId, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.DropDownListFor(m => m.SubscriptionId, new SelectList(ViewBag.Subscribtion, "Id", "Title"), "-----Select Subscriber ------", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SubscriptionId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <button type="submit" value="Create" class="btn btn-primary"><i class="fas fa-save pr-2"></i> Save</button>  |
                <button type="reset" value="Reset" class="btn btn-mdb-color"><i class="fas fa-redo-alt"></i> Reset</button>

            </div>
        }



    </div>
    <!--/.Card content-->

</div>
