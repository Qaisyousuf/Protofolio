@model QaisYousuf.ViewModels.SubscribeViewModel
@{
    Layout = null;
}

<div class="card card-cascade narrower mb-1 z-depth-0">

    <!--Card image-->
    <div class="view view-cascade pt-0">
        <div class=" card-header light-blue lighten-1 white-text text-uppercase font-weight-bold text-center py-3">
            Insert new record
        </div>

    </div>
    <!--/.Card image-->
    <!--Card content-->
    <div class="card-body card-body-cascade d-flex justify-content-center mt-n2 z-depth-0">
        @using (Html.BeginForm("Create", "Subscribe", FormMethod.Post, new { onsubmit = "return SubmitFormCreate(this)" }))
        {
            @Html.HiddenFor(model => model.Id)
            <div class="form-group">
                @Html.LabelFor(model => model.Title, new { @class = "control-label" })
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control w-100" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Email, new { @class = "control-label" })
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Buttontext, new { @class = "control-label" })
                @Html.EditorFor(model => model.Buttontext, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Buttontext, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ModalMessage, new { @class = "control-label" })
                @Html.TextAreaFor(model => model.ModalMessage, 10, 10, new { @class = "form-control width-textarea", })
                @Html.ValidationMessageFor(model => model.ModalMessage, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ImageUrl, new { @class = "control-label" })
                @Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
            </div>

           
            <div class="form-group">
                @Html.LabelFor(model => model.Content, new { @class = "control-label" })
                @Html.TextAreaFor(model => model.Content, 10, 10, new { @class = "form-control width-textarea", })
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>


            <div class="form-group">
                <button type="submit" value="Create" class="btn btn-primary"><i class="fas fa-save pr-2"></i> Save</button>  |
                <button type="reset" value="Reset" class="btn btn-mdb-color"><i class="fas fa-redo-alt"></i> Reset</button>

            </div>
        }



    </div>
    <!--/.Card content-->

</div>